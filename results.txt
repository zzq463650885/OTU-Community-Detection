# Records of experiments
                        
# Ideas:
    增加重构边的线性权重中间 8*8 矩阵，而非直接向量相乘; 优化内积计算，使用特定的内积公式;
    损失函数优化（谨慎增加新损失函数）
    前向传播公式升级为注意力机制
    使用网格调参法    
    GCN切比雪夫近似公式微调  lamda_max change
特征或许可以直接用bio72而不是dpwk数据。(bad)
louvain 算是目前市面上提到的和使用过的最常用的社区发现算法之一了，除此之外就是     infomap
增加对比实验方法和最新方法

中期工作创新点： 调整GCN运算、自编码器恢复features(0.7328)(与diag（sum/100）一起0.7291)

# 改修正后邻接矩阵对角线、LeakyReLU
    # adj.setdiag(1) # 0.7274
    # adj.setdiag(0.5) # 0.7252, about 71
    # adj.setdiag(2) # bad 0.64
    # adj.setdiag(10) # bad dpwk 0.65
    # adj.setdiag(adj.sum(1)) # 一般 dpwk 0.70  17: 0.6963
    adj.setdiag(adj.sum(1)/100) # low loss 0.216 but low modul 0.717,0.726  ``` 0.7343 ``` 
    # adj.setdiag(0.5+adj.sum(1)/200) # 0.7173
    # adj.setdiag(1+adj.sum(1)/100) #  0.7301 0.7167 0.7003



# Total Scores         
    method     EdMot   LabelProp  SCD      GEMSEC   Spectral  Louvain  NOCD     OTUCD
    time       77 min  5 min      45 min   4h       3 min     2min    
    meta72     0.0182  0.5332     0.3128   0.0531   0.4100    0.5292   0.5371   0.5634 
    dpwk(0.5)  0.0035  0.7057     0.5534   0.4448   0.6568    0.6798   0.7274   0.7315
    n2v(0.8)   0       0.7260     0.5713   0.4275   0.6546    0.7176   0.7267   0.7479
    lle(0.5)   0       0.6881     0.6969   0.3922   0.3614    0.8092   0.7447   0.7829
    line(0.7)  0       0.7169     0.6928   0.5468   0.7289    0.7812   0.7943   0.8409
# Notes
    Louvain to pearson、kneighbour、merged: good totally
# Total Scores    (Transverse to draw)
                        meta72        dpwk      n2v       lle        line
    LabelProp           0.5332        0.7057    0.7260    0.6881     0.7169
    SCD                 0.3128        0.5534    0.5713    0.6969     0.6928
    GEMSEC              0.0531        0.4448    0.4275    0.3922     0.5468    
    Spectral            0.4100        0.6568    0.6546    0.3614     0.7289     
    Louvain             0.5292        0.6798    0.7176    0.8092     0.7812             
8coms & single features
    NOCD                0.5371        0.7274    0.7267    0.7447     0.7943
    (*)OTUCD            0.5634        0.7315    0.7479    0.7829     0.8409
16coms & double features
    NOCD                0.5120        0.7135    0.7351    0.7812     0.8270
    NOCD&GAE            0.5586        0.7151    0.7377    0.7791     0.8277
    OTUCD&GAE&diag      0.5592        0.7275    0.7451    0.7830     0.8123


# 创新点一：高阶自权重对角线邻接矩阵迭代
0阶 
    1        0.5      2      10     
    0.7274   0.7252   0.64   0.65
纯一阶对角线：
    1           adj.sum(1)   0.5+adj.sum(1)/200    1+adj.sum(1)/100   adj.sum(1)/100    s1[i][0] / 100
    0.7274      0.70         0.7173                0.7167             0.7315(0.7321)            (0.7026)
纯二阶对角线：
    25023/squa_sum    2502/squa_sum    250/squa_sum    1000/squa_sum
    0.6730            0.7011           0.6974          0.6969
一阶二阶：
    代码 s1[i][0] / 100 + s1[i][0] * s1[i][0] / 25023
    sum/100+sum^2/25023  0.5+sum/200+sum^2/200    s1[i][0] / 200 + s1[i][0] * s1[i][0] / 200
    0.6670               0.6967                   0.7004
    s1[i][0] / 200 + s1[i][0] * s1[i][0] / 2000   s1[i][0] / 200 + s1[i][0] * s1[i][0] / 20    s1[i][0] / 200 + s1[i][0] * s1[i][0] / 2
    0.6990                                        0.6995                                       0.6732
    s1[i][0] / 100 + s1[i][0] * s1[i][0] / 10000  s1[i][0] / 100 + s1[i][0] * s1[i][0] / 1000  s1[i][0] / 100 + s1[i][0] * s1[i][0] / 100
    0.7303                                        0.7204                                       0.7187
    s1[i][0] / 100 + s1[i][0] * s1[i][0] / 100000
    0.7191
    
    s1[i][0] / 100 - s1[i][0] * s1[i][0] / 10000  s1[i][0] / 100 - s1[i][0] * s1[i][0] / 1000  s1[i][0] / 100 - s1[i][0] * s1[i][0] / 100
    0.7341                                        0.7267                                       0.7336
    s1[i][0] / 100 - s1[i][0] * s1[i][0] / 10     s1[i][0] / 100 - s1[i][0] * s1[i][0]         s1[i][0] / 100 - s1[i][0] * s1[i][0] / 500 
    0.7306                                        0.7203                                       0.7310
    s1[i][0] / 100 - s1[i][0] * s1[i][0] / 250
    0.7183
    
中期书写结果汇总(加了模块，改了邻接矩阵)
数据名\方法	Label   SCD     GEM-SEC Spect   Louvain  OTUCD  
meta	    0.5332	0.3128	0.0531	0.4100	0.5292	0.5592
DeepWalk	0.7057	0.5534	0.4448	0.6568	0.6798	0.7275
Node2vec	0.7260	0.5713	0.4275	0.6546	0.7176	0.7451
LLE	        0.6881	0.6969	0.3922	0.3614	0.8092	0.7830
LINE	    0.7169	0.6928	0.5468	0.7289	0.7812	0.8123
毕业设计第三章
数据名\方法	Label   SCD     GEM-SEC Spect   Louvain  OTUCD  
Abundance	0.5332	0.3128	0.0531	0.4100	0.5292	0.5592
DeepWalk	0.7057	0.5534	0.4448	0.6568	0.6798	0.7275
Node2vec	0.7260	0.5713	0.4275	0.6546	0.7176	0.7451
LLE     	0.6881	0.6969	0.3922	0.3614	0.8092	0.7830
LINE	    0.7169	0.6928	0.5468	0.7289	0.7812	0.8123

毕业设计论文书写结果汇总
无GAE bio: 0.522 dpwk: 0.728 n2v: 0.719 lle: 0.736 line: 0.774
GAE(1e-3): 0.525 0.710 0.707 0.736 0.790
0阶泰勒公式（OTUCD, gat 1e-2  ）
         1      0      0.5    -0.5   -1  -2     2      5       10
bio      0.521  0.522  0.537  0.006  nan(5个)   0.509  0.492   0.412
dpwk     0.727  0.718  0.720  0.271             0.730  0.669   0.642
n2v      0.712  0.716  0.705  0.353             0.677  0.614   0.493
lle      0.720  0.735  0.739  0.457             0.717  0.608   0.455
line     0.785  0.771  0.783  0.426             0.781  0.734   0.598
1阶泰勒公式（OTUCD  ）
a        0      0     0      0.5    0.5   0.5    1      1     1      2      2     2      5      5     5      -1     -1   -1   
b        1/100  1/50  1/150  1/100  1/50  1/150  1/100  1/50  1/150  1/100  1/50  1/150  1/100  1/50  1/150  1/100  1/50  1/150   
bio      0.540  0.485 0.528  0.538  0.535 0.537         0.519 0.522
dpwk     0.735  0.732 0.734  0.716  0.728 0.726         0.707 0.737
n2v      0.711  0.722 0.725  0.722  0.723 0.714         0.681 0.710
lle      0.735  0.737 0.730  0.734  0.730 0.733         0.727 0.730
line     0.783  0.783 0.789  0.786  0.788 0.782         0.783 0.786